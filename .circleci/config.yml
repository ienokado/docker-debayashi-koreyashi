version: 2.1

orbs:
  codecov: codecov/codecov@1.0.5

executors:
  default:
    working_directory: ~/repo
    docker:
      - image: circleci/php:7.4
    environment:
      - APP_ENV: testing
  testing-image:
    working_directory: ~/repo
    docker:
      - image: circleci/php:7.4
      - image: circleci/mysql:8.0.17
        command: mysqld --default-authentication-plugin=mysql_native_password
    environment:
      - APP_DEBUG: true
      - APP_ENV: testing
      - APP_KEY: base64:YlIJx6uH3OUb3hxN+PAiJKlC+EGZ2KYi8VHxsfdJpLk=
      - DB_CONNECTION: circleci
      - DB_DATABASE: circle_test
      - DB_USERNAME: root
      - MYSQL_ALLOW_EMPTY_PASSWORD: true

commands:
  install-dockerize:
    steps:
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
  install-php-extensions:
    steps:
      - run:
          name: Install PHP Extensions
          command: sudo docker-php-ext-install pdo_mysql
  restore-cache-composer:
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "src/composer.json" }}
            - v1-dependencies-
  composer-install:
    steps:
      - run:
          name: composer install
          working_directory: src
          command: composer install -n --prefer-dist
  save-cache-composer:
    steps:
      - save_cache:
          paths:
            - ./src/vendor
          key: v1-dependencies-{{ checksum "src/composer.json" }}
  wait-for-mysql:
    steps:
      - run:
          name: Wait for MySQL
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
  migration-seeding:
    steps:
      - run:
          name: Migration & Seeding
          working_directory: src
          command: php artisan migrate:refresh --seed
  test-static-code-analysis:
    steps:
      - run:
          name: Coding rules check
          working_directory: src
          command: ./vendor/bin/phpcs --standard=phpcs.xml ./
  test-unittest:
    steps:
      - run:
          name: Unittest
          working_directory: src
          command: ./vendor/bin/phpunit --coverage-clover=coverage.xml
  test-coverage:
    steps:
      - run:
          name: Coverage
          working_directory: src
          command: bash <(curl -s https://codecov.io/bash -t $CODECOV_TOKEN)
          when: on_success

jobs:
  build:
    executor:
      name: default
    steps:
      - checkout
      - install-php-extensions
      - restore-cache-composer
      - composer-install
      - save-cache-composer
  test:
    executor:
      name: testing-image
    steps:
      - checkout
      - install-dockerize
      - install-php-extensions
      - restore-cache-composer
      - composer-install
      - save-cache-composer
      - wait-for-mysql
      - migration-seeding
      - test-static-code-analysis
      - test-unittest
      - test-coverage

workflows:
  build-and-test:
    jobs:
      - build
      - test:
          requires:
            - build
